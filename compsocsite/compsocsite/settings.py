"""
Django settings for compsocsite project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


import environ

env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = eval(env('DEBUG'))

# SECURITY WARNING: allow only specific domains to access the site
ALLOWED_HOSTS = ['*']

X_FRAME_OPTIONS = env('X_FRAME_OPTIONS') # has been taken care by middleware
SESSION_COOKIE_SECURE = eval(env('SESSION_COOKIE_SECURE'))
CSRF_COOKIE_SECURE = eval(env('CSRF_COOKIE_SECURE'))
SECURE_HSTS_SECONDS = int(env('SECURE_HSTS_SECONDS'))
SECURE_SSL_REDIRECT = eval(env('SECURE_SSL_REDIRECT'))
SECURE_HSTS_INCLUDE_SUBDOMAINS = eval(env('SECURE_HSTS_INCLUDE_SUBDOMAINS'))
SECURE_HSTS_PRELOAD = eval(env('SECURE_HSTS_PRELOAD'))
SECURE_CONTENT_TYPE_NOSNIFF = eval(env('SECURE_CONTENT_TYPE_NOSNIFF'))
SECURE_BROWSER_XSS_FILTER = eval(env('SECURE_BROWSER_XSS_FILTER'))
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Application definition

INSTALLED_APPS = [
    'polls.apps.PollsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'compsocsite',
    'appauth',
    'groups',
    'multipolls',
    'django_mobile',
    'mathfilters',
    'sessions_local',
    'corsheaders',
    'qr_code',
    'guardian',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google'
    # 'django_cas',
]

SITE_ID = int(env('SITE_ID'))

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_mobile.middleware.MobileDetectionMiddleware',
    'django_mobile.middleware.SetFlavourMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'allauth.account.middleware.AccountMiddleware'
    # 'django_cas.middleware.CASMiddleware'
    # 'django_cas_ng.middleware.CASMiddleware'
]

ROOT_URLCONF = 'compsocsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django_mobile.context_processors.flavour',
            ],
            'loaders':(
                ('django_mobile.loader.CachedLoader', (
                    'django_mobile.loader.Loader',
                    'django.template.loaders.filesystem.Loader',
                    'django.template.loaders.app_directories.Loader',
                    'django.template.loaders.app_directories.Loader',
                )),
            )
        },
    },
]


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

WSGI_APPLICATION = 'compsocsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# PASSWORD_HASHERS = [
#     'django.contrib.auth.hashers.PBKDF2PasswordHasher',
#     'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
#     'django.contrib.auth.hashers.Argon2PasswordHasher',
#     'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
# ]

#CAS
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'guardian.backends.ObjectPermissionBackend',
    'appauth.custom_backends.CustomUserModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
    # 'django.contrib.auth.backends.ModelBackend'
    #  'cas.backends.CASBackend',
    #  'django_cas.backends.CASBackend'
]
# CAS_GATEWAY = True

# CAS_RESPONSE_CALLBACKS = (
#     'module.callbackfunction',
# )

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'EST'

USE_I18N = True

USE_L10N = True

USE_TZ = True

#CAS
# CAS_SERVER_URL = "https://cas-auth.rpi.edu/cas/"
# CAS_LOGOUT_COMPLETELY = True
# CAS_PROVIDE_URL_TO_LOGOUT = True
# CAS_AUTO_CREATE_USERS = True
# CAS_IGNORE_REFERER = True
# CAS_REDIRECT_URL = '/polls/regular_polls'
#'https://opra.cs.rpi.edu'
# CAS_FORCE_SSL_SERVICE_URL = True

#################################################
# Email settings                                #
#################################################

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
EMAIL_PORT=587


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = 'static/'
LOGIN_URL = '/auth/login/'

STATICFILES_DIRS = (
    STATIC_URL,
    os.path.join(os.path.abspath(BASE_DIR), 'static'),
)

# ACCOUNT_ADAPTER = 'appauth.adapters.CustomSocialAccountAdapter'
SOCIALACCOUNT_ADAPTER = 'appauth.adapters.CustomSocialAccountAdapter'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = env('SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET')
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['email']
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
    }
}

